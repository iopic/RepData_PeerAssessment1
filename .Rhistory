dplyr::select(Req_ID,Gender:Disposition_Reason_Desc)
#fix phase labeling if needed
req$Phase<-recode(req$Phase,'"S1"="S2"')
#create new total minority column based on race information
req$tot_min<-recode(req$Race,'c("American Indian or Alaskan Native","Asian","Black or African American","Hispanic or Latino","Native Hawaiian or Other Pacific Islander","Two or More Races")="Total Minority";"White"="White";else=""')
#NOT NEEDED
#change phase descript to match key exactly (i.e., remove 'Ax-' part)
#req$Status_Desc<-str_sub(req$Status_Desc,6)
#add status identifier to data to match key file column
req<- req %>% mutate(New_desc=paste(as.character(Status_Desc),as.character(Phase),sep="_"))
step_labels<-c("S2","S8","SA","A1","A2","A3","A4","A5","A7","Overall")
#add on all new step labels
for (label in step_labels){
req<-add_step_label(req,key,step_label=label)
}
names(req)
write.csv(req,file.path(dir,"Charts/full_plotting_data_fall_ext.csv"), row.names=FALSE,na="")
View(key)
table(req$New_desc)
table(key$New_desc)
names(key0)
names(key)
View(key)
key$Status<-sub(" $",key$Status)
#strip out stupid white spaces
key$Status<-sub(" $","",key$Status)
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
table(key$New_desc)
key$Status<-sub("d $","d",key$Status)
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
table(key$New_desc)
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
#retain only desired req and retain only useful columns. Update Req.ID value as relevant
req<-data %>%
filter(Req_ID==256331) %>%
dplyr::select(Req_ID,Gender:Disposition_Reason_Desc)
#fix phase labeling if needed
req$Phase<-recode(req$Phase,'"S1"="S2"')
#create new total minority column based on race information
req$tot_min<-recode(req$Race,'c("American Indian or Alaskan Native","Asian","Black or African American","Hispanic or Latino","Native Hawaiian or Other Pacific Islander","Two or More Races")="Total Minority";"White"="White";else=""')
#NOT NEEDED
#change phase descript to match key exactly (i.e., remove 'Ax-' part)
#req$Status_Desc<-str_sub(req$Status_Desc,6)
#add status identifier to data to match key file column
req<- req %>% mutate(New_desc=paste(as.character(Status_Desc),as.character(Phase),sep="_"))
step_labels<-c("S2","S8","SA","A1","A2","A3","A4","A5","A7","Overall")
#add on all new step labels
for (label in step_labels){
req<-add_step_label(req,key,step_label=label)
}
write.csv(req,file.path(dir,"Charts/full_plotting_data_fall_ext.csv"), row.names=FALSE,na="")
####All mixed tables####
gen<-list(gz1,gz2,gz3,gz4,gz5,gz6,gz7,gz8,gz9,gz10)
race<-list(rz1,rz2,rz3,rz4,rz5,rz6,rz7,rz8,rz9,rz10)
tm<-list(tmz1,tmz2,tmz3,tmz4,tmz5,tmz6,tmz7,tmz8, tmz9,tmz10)
labels<-c("Step 1 - S2","Step 2 - S8","Step 3 - SA","Step 4 - A1","Step 5 - A2", "Step 6 - A3", "Step 7 - A4","Step 8 - A5","Step 9 - A7","Overall")
all_results<-run_mixed_tables2(gen=gen,race=race,tm=tm,labels=labels)
#construct beginning of gender tables for each phase
i<-0
for (label in step_labels){
i<-i+1
assign(paste0("gz",i),gen_table(req,phase_label=label))
}
#race tables for each phase
i<-0
for (label in step_labels){
i<-i+1
assign(paste0("rz",i),race_table(req,phase_label=label))
}
#total minority tables for each phase
i<-0
for (label in step_labels){
i<-i+1
assign(paste0("tmz",i),tm_table(req,phase_label=label))
}
gen<-list(gz1,gz2,gz3,gz4,gz5,gz6,gz7,gz8,gz9,gz10)
race<-list(rz1,rz2,rz3,rz4,rz5,rz6,rz7,rz8,rz9,rz10)
tm<-list(tmz1,tmz2,tmz3,tmz4,tmz5,tmz6,tmz7,tmz8, tmz9,tmz10)
labels<-c("Step 1 - S2","Step 2 - S8","Step 3 - SA","Step 4 - A1","Step 5 - A2", "Step 6 - A3", "Step 7 - A4","Step 8 - A5","Step 9 - A7","Overall")
all_results<-run_mixed_tables2(gen=gen,race=race,tm=tm,labels=labels)
#remove additional races -- get rid of non focal races
all_results_clean<-all_results %>%
filter(!Class %in% c("American Indian or Alaskan Native","Native Hawaiian or Other Pacific Islander","Two or More Races"))
write.csv(all_results_clean,file.path(dir,"CSV Tables/steps_fall_ext_256331.csv"),na="",row.names=FALSE)
test<-iris
View(test)
model.matrx(~Species -1, data=iris)
model.matrix(~Species -1, data=iris)
new_test<-model.matrix(~Species -1, data=iris)
View(new_test)
new_test<-model.matrix(~Species, data=iris)
View(new_test)
View(test)
new_test<-model.matrix(~Species-1, data=iris)
newer_test<-cbind(test[,-1],new_test)
View(newer_test)
head(test)
newer_test<-cbind(test[,1:4],new_test)
View(newer_test)
View(newer_test)
test<-iris
model.matrix(~Species-1, data=iris)
#set base wd where data subfolder is located
dir<-"F:/Delta Airlines/other/2016/IFS Data Analysis/Sam Analysis/"
source('F:/Delta Airlines/other/2016/IFS Data Analysis/Sam Analysis/Replication of Previous Results/Code/helper functions.R')
#read in main data file
data<-read.csv(file.path(dir,"Data/2016-03-16  FA Bid 5 - Applicant Flow Data.csv"),strip.white=TRUE)
#read in steps key file (map disposition codes to analysis category at each stage)
#key<-read.csv(file.path(dir,"Data/status_key.csv"))
wb<-loadWorkbook(file.path(dir,"Data/status_key.xlsx"))
key<-readWorksheet(wb,sheet="Key Wint Ext - 258582") #Key Wint Ext - 258582
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
#retain only desired req and retain only useful columns. Update Req.ID value as relevant
req<-data %>%
filter(Req_ID==258582) %>%
dplyr::select(Req_ID,Gender:Disposition_Reason_Desc)
#fix phase labeling if needed
req$Phase<-recode(req$Phase,'"S7"="S2";"A6"="A5"')
#create new total minority column based on race information
req$tot_min<-recode(req$Race,'c("American Indian or Alaskan Native","Asian","Black or African American","Hispanic or Latino","Native Hawaiian or Other Pacific Islander","Two or More Races")="Total Minority";"White"="White";else=""')
#NOT NEEDED
#change phase descript to match key exactly (i.e., remove 'Ax-' part)
#req$Status_Desc<-str_sub(req$Status_Desc,6)
#add status identifier to data to match key file column
req<- req %>% mutate(New_desc=paste(as.character(Status_Desc),as.character(Phase),sep="_"))
step_labels<-c("S2","S8","SA","A1","A2","A4","A5","Overall")
#add on all new step labels
for (label in step_labels){
req<-add_step_label(req,key,step_label=label)
}
table(req$Overall)
table(req$Overall,useNA = 'ifany')
key<-readWorksheet(wb,sheet="Key Wint Ext - 258582") #Key Wint Ext - 258582
#strip out stupid white spaces
key$Status<-sub("d $","d",key$Status)
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
#retain only desired req and retain only useful columns. Update Req.ID value as relevant
req<-data %>%
filter(Req_ID==258582) %>%
dplyr::select(Req_ID,Gender:Disposition_Reason_Desc)
#fix phase labeling if needed
req$Phase<-recode(req$Phase,'"S7"="S2";"A6"="A5"')
#create new total minority column based on race information
req$tot_min<-recode(req$Race,'c("American Indian or Alaskan Native","Asian","Black or African American","Hispanic or Latino","Native Hawaiian or Other Pacific Islander","Two or More Races")="Total Minority";"White"="White";else=""')
#NOT NEEDED
#change phase descript to match key exactly (i.e., remove 'Ax-' part)
#req$Status_Desc<-str_sub(req$Status_Desc,6)
#add status identifier to data to match key file column
req<- req %>% mutate(New_desc=paste(as.character(Status_Desc),as.character(Phase),sep="_"))
step_labels<-c("S2","S8","SA","A1","A2","A4","A5","Overall")
#add on all new step labels
for (label in step_labels){
req<-add_step_label(req,key,step_label=label)
}
table(req$Overall,useNA = 'ifany')
table(key$New_desc)
key$Status<-sub("d $","d",key$Status)
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
table(key$New_desc)
key<-readWorksheet(wb,sheet="Key Wint Ext - 258582") #Key Wint Ext - 258582
#strip out stupid white spaces
key$Status<-sub("d  $","d",key$Status)
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
table(key$New_desc)
#retain only desired req and retain only useful columns. Update Req.ID value as relevant
req<-data %>%
filter(Req_ID==258582) %>%
dplyr::select(Req_ID,Gender:Disposition_Reason_Desc)
#fix phase labeling if needed
req$Phase<-recode(req$Phase,'"S7"="S2";"A6"="A5"')
#create new total minority column based on race information
req$tot_min<-recode(req$Race,'c("American Indian or Alaskan Native","Asian","Black or African American","Hispanic or Latino","Native Hawaiian or Other Pacific Islander","Two or More Races")="Total Minority";"White"="White";else=""')
#NOT NEEDED
#change phase descript to match key exactly (i.e., remove 'Ax-' part)
#req$Status_Desc<-str_sub(req$Status_Desc,6)
#add status identifier to data to match key file column
req<- req %>% mutate(New_desc=paste(as.character(Status_Desc),as.character(Phase),sep="_"))
step_labels<-c("S2","S8","SA","A1","A2","A4","A5","Overall")
#add on all new step labels
for (label in step_labels){
req<-add_step_label(req,key,step_label=label)
}
table(req$Overall,useNA = 'ifany')
test<-req%>%
filter(is.na(Overall))
table(test$Overall)
test<-req%>%
filter(is.na(Overall))
View(test)
table(req$New_desc)
table(test$New_desc)
#read in steps key file (map disposition codes to analysis category at each stage)
#key<-read.csv(file.path(dir,"Data/status_key.csv"))
wb<-loadWorkbook(file.path(dir,"Data/status_key.xlsx"))
key<-readWorksheet(wb,sheet="Key Wint Ext - 258582") #Key Wint Ext - 258582
#strip out stupid white spaces
key$Status<-sub("d  $","d",key$Status)
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
#retain only desired req and retain only useful columns. Update Req.ID value as relevant
req<-data %>%
filter(Req_ID==258582) %>%
dplyr::select(Req_ID,Gender:Disposition_Reason_Desc)
#fix phase labeling if needed
req$Phase<-recode(req$Phase,'"S7"="S2";"A6"="A5"')
#create new total minority column based on race information
req$tot_min<-recode(req$Race,'c("American Indian or Alaskan Native","Asian","Black or African American","Hispanic or Latino","Native Hawaiian or Other Pacific Islander","Two or More Races")="Total Minority";"White"="White";else=""')
#NOT NEEDED
#change phase descript to match key exactly (i.e., remove 'Ax-' part)
#req$Status_Desc<-str_sub(req$Status_Desc,6)
#add status identifier to data to match key file column
req<- req %>% mutate(New_desc=paste(as.character(Status_Desc),as.character(Phase),sep="_"))
step_labels<-c("S2","S8","SA","A1","A2","A4","A5","Overall")
#add on all new step labels
for (label in step_labels){
req<-add_step_label(req,key,step_label=label)
}
table(req$Overall,useNA='ifany')
View(key)
#read in steps key file (map disposition codes to analysis category at each stage)
#key<-read.csv(file.path(dir,"Data/status_key.csv"))
wb<-loadWorkbook(file.path(dir,"Data/status_key.xlsx"))
key<-readWorksheet(wb,sheet="Key Wint Ext - 258582") #Key Wint Ext - 258582
#strip out stupid white spaces
key$Status<-sub("d  $","d",key$Status)
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
#retain only desired req and retain only useful columns. Update Req.ID value as relevant
req<-data %>%
filter(Req_ID==258582) %>%
dplyr::select(Req_ID,Gender:Disposition_Reason_Desc)
#fix phase labeling if needed
req$Phase<-recode(req$Phase,'"S7"="S2";"A6"="A5"')
#create new total minority column based on race information
req$tot_min<-recode(req$Race,'c("American Indian or Alaskan Native","Asian","Black or African American","Hispanic or Latino","Native Hawaiian or Other Pacific Islander","Two or More Races")="Total Minority";"White"="White";else=""')
#NOT NEEDED
#change phase descript to match key exactly (i.e., remove 'Ax-' part)
#req$Status_Desc<-str_sub(req$Status_Desc,6)
#add status identifier to data to match key file column
req<- req %>% mutate(New_desc=paste(as.character(Status_Desc),as.character(Phase),sep="_"))
step_labels<-c("S2","S8","SA","A1","A2","A4","A5","Overall")
#add on all new step labels
for (label in step_labels){
req<-add_step_label(req,key,step_label=label)
}
table(req$Overall,useNA='ifany')
#save data for plotting purposes
write.csv(req,file.path(dir,"Charts/full_plotting_data_fall_ext.csv"), row.names=FALSE,na="")
#construct beginning of gender tables for each phase
i<-0
for (label in step_labels){
i<-i+1
assign(paste0("gz",i),gen_table(req,phase_label=label))
}
#race tables for each phase
i<-0
for (label in step_labels){
i<-i+1
assign(paste0("rz",i),race_table(req,phase_label=label))
}
#total minority tables for each phase
i<-0
for (label in step_labels){
i<-i+1
assign(paste0("tmz",i),tm_table(req,phase_label=label))
}
phase_labels
phase_label
step_labels<-c("S2","S8","SA","A1","A2","A3","A4","A5","Overall")
#add on all new step labels
for (label in step_labels){
req<-add_step_label(req,key,step_label=label)
}
#key<-read.csv(file.path(dir,"Data/status_key.csv"))
wb<-loadWorkbook(file.path(dir,"Data/status_key.xlsx"))
key<-readWorksheet(wb,sheet="Key Wint Ext - 258582") #Key Wint Ext - 258582
#strip out stupid white spaces
key$Status<-sub("d  $","d",key$Status)
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
#retain only desired req and retain only useful columns. Update Req.ID value as relevant
req<-data %>%
filter(Req_ID==258582) %>%
dplyr::select(Req_ID,Gender:Disposition_Reason_Desc)
#fix phase labeling if needed
req$Phase<-recode(req$Phase,'"S7"="S2";"A6"="A5"')
#create new total minority column based on race information
req$tot_min<-recode(req$Race,'c("American Indian or Alaskan Native","Asian","Black or African American","Hispanic or Latino","Native Hawaiian or Other Pacific Islander","Two or More Races")="Total Minority";"White"="White";else=""')
#NOT NEEDED
#change phase descript to match key exactly (i.e., remove 'Ax-' part)
#req$Status_Desc<-str_sub(req$Status_Desc,6)
#add status identifier to data to match key file column
req<- req %>% mutate(New_desc=paste(as.character(Status_Desc),as.character(Phase),sep="_"))
step_labels<-c("S2","S8","SA","A1","A2","A3","A4","A5","Overall")
#add on all new step labels
for (label in step_labels){
req<-add_step_label(req,key,step_label=label)
}
table(req$Overall,useNA='ifany')
write.csv(req,file.path(dir,"Charts/full_plotting_data_fall_ext.csv"), row.names=FALSE,na="")
#construct beginning of gender tables for each phase
i<-0
for (label in step_labels){
i<-i+1
assign(paste0("gz",i),gen_table(req,phase_label=label))
}
#race tables for each phase
i<-0
for (label in step_labels){
i<-i+1
assign(paste0("rz",i),race_table(req,phase_label=label))
}
#total minority tables for each phase
i<-0
for (label in step_labels){
i<-i+1
assign(paste0("tmz",i),tm_table(req,phase_label=label))
}
step_labels
gen<-list(gz1,gz2,gz3,gz4,gz5,gz6,gz7,gz8,gz9)
race<-list(rz1,rz2,rz3,rz4,rz5,rz6,rz7,rz8,rz9)
tm<-list(tmz1,tmz2,tmz3,tmz4,tmz5,tmz6,tmz7,tmz8,tmz9)
labels<-c("Step 1 - S2","Step 2 - S8","Step 3 - SA","Step 4 - A1","Step 5 - A2", "Step 6 - A3", "Step 7 - A4","Step 8 - A5","Overall")
all_results<-run_mixed_tables2(gen=gen,race=race,tm=tm,labels=labels)
#remove additional races -- get rid of non focal races
all_results_clean<-all_results %>%
filter(!Class %in% c("American Indian or Alaskan Native","Native Hawaiian or Other Pacific Islander","Two or More Races"))
write.csv(all_results_clean,file.path(dir,"CSV Tables/steps_wint_ext_258582.csv"),na="",row.names=FALSE)
write.csv(req,file.path(dir,"Charts/full_plotting_data_winter_ext.csv"), row.names=FALSE,na="")
#set base wd where data subfolder is located
dir<-"F:/Delta Airlines/other/2016/IFS Data Analysis/Sam Analysis/"
source('F:/Delta Airlines/other/2016/IFS Data Analysis/Sam Analysis/Replication of Previous Results/Code/helper functions.R')
#read in main data file
data<-read.csv(file.path(dir,"Data/2016-03-16  FA Bid 5 - Applicant Flow Data.csv"),strip.white=TRUE)
#read in steps key file (map disposition codes to analysis category at each stage)
#key<-read.csv(file.path(dir,"Data/status_key.csv"))
wb<-loadWorkbook(file.path(dir,"Data/status_key.xlsx"))
key<-readWorksheet(wb,sheet="Key Fall Ext - 256331") #Key Wint Ext - 258582
#strip out stupid white spaces
key$Status<-sub("d  $","d",key$Status)
#add new label combining status by phase
key<-key %>% mutate(New_desc=paste(as.character(Status),as.character(Phase),sep="_"))
#retain only desired req and retain only useful columns. Update Req.ID value as relevant
req<-data %>%
filter(Req_ID==256331) %>%
dplyr::select(Req_ID,Gender:Disposition_Reason_Desc)
#fix phase labeling if needed
req$Phase<-recode(req$Phase,'"S1"="S2"')
#create new total minority column based on race information
req$tot_min<-recode(req$Race,'c("American Indian or Alaskan Native","Asian","Black or African American","Hispanic or Latino","Native Hawaiian or Other Pacific Islander","Two or More Races")="Total Minority";"White"="White";else=""')
#NOT NEEDED
#change phase descript to match key exactly (i.e., remove 'Ax-' part)
#req$Status_Desc<-str_sub(req$Status_Desc,6)
#add status identifier to data to match key file column
req<- req %>% mutate(New_desc=paste(as.character(Status_Desc),as.character(Phase),sep="_"))
step_labels<-c("S2","S8","SA","A1","A2","A3","A4","A5","A7","Overall")
#add on all new step labels
for (label in step_labels){
req<-add_step_label(req,key,step_label=label)
}
table(req$Overall, useNA='ifany')
write.csv(req,file.path(dir,"Charts/full_plotting_data_fall_ext.csv"), row.names=FALSE,na="")
raw_data_winter<-read.csv(file.path(chart_dir,"full_plotting_data_winter_ext.csv"),stringsAsFactors=FALSE)
source("F:/Delta Airlines/other/2016/IFS Data Analysis/Sam Analysis/Code/plot helper code.R")
dir<-("F:/Delta Airlines/other/2016/IFS Data Analysis/Sam Analysis/CSV Tables")
chart_dir<-("F:/Delta Airlines/other/2016/IFS Data Analysis/Sam Analysis/Charts")
source("F:/Delta Airlines/other/2016/IFS Data Analysis/Sam Analysis/Code/plot helper code.R")
#### Prep data files for graphing ###
#read in raw data
raw_data_fall<-read.csv(file.path(chart_dir,"full_plotting_data_fall_ext.csv"),stringsAsFactors=FALSE)
raw_data_winter<-read.csv(file.path(chart_dir,"full_plotting_data_winter_ext.csv"),stringsAsFactors=FALSE)
raw_data<-rbind(raw_data_fall,raw_data_winter)
View(raw_data_winter)
#gather data
data_counts<-raw_data_fall%>%
select(Gender, Race, tot_min, Start:Overall)%>%
gather(Phase,Count,c(Start:Prehire,Overall))
View(raw_data_fall)
data_counts<-raw_data_fall%>%
select(Gender, Race, tot_min, S2:Overall)%>%
gather(Phase,Count,c(S2:Prehire,Overall))
data_counts<-raw_data_fall%>%
select(Gender, Race, tot_min, S2:Overall)%>%
gather(Phase,Count,c(S2:Overall))
#clean up count factor
data_counts$Count[data_counts$Count==" Withdrawn"]<-"Withdrawn"
data_counts$Count<-factor(data_counts$Count)
data_counts$Count<-reorder_factor(data_counts$Count,c(2,3,4,5))
#clean up phase factor
data_counts$Phase<-factor(data_counts$Phase)
data_counts$Phase<-reorder_factor(data_counts$Phase,c(5,7,8,1,2,3,4,6,9))
data_fall<-read.csv(file.path(dir,'steps_fall_ext_256331.csv'))
View(data_fall)
View(raw_data_fall)
n_steps<-10
data$analysis_group<-factor(rep(c(rep("Gender",2),rep("Total Minority",2),rep("Race",4)),n_steps))
n_steps<-10
data_fall$analysis_group<-factor(rep(c(rep("Gender",2),rep("Total Minority",2),rep("Race",4)),n_steps))
View(data_fall)
long_data<-data_fall %>%
select(analysis_group,Class,Pass:Fail,step) %>%
reshape(varying=3:4,v.names="Sample",times=names(data)[4:5],timevar="Status",idvar=c("analysis_group","Class","step"),direction="long")
View(data_fall)
View(data_fall)
long_data<-data_fall %>%
select(analysis_group,Class,Pass:Fail,step) %>%
reshape(varying=3:4,v.names="Sample",times=names(data_fall)[4:5],timevar="Status",idvar=c("analysis_group","Class","step"),direction="long")
long_data$Status<-reorder_factor(long_data$Status,c(2,1))
long_data$Class<-reorder_factor(long_data$Class,c(5,3,7,4,6,2,1))
#set up desired colors for groups
pass_fail_colors<-c("dodgerblue4","brown3")
pass_fail_withdrawl_colors<-c("dodgerblue4","brown3","lightgoldenrod2")
race_colors<-c("dodgerblue4","deepskyblue4","deepskyblue3","lightsteelblue2")
grade<-colorRampPalette(brewer.pal(7,"BuPu"))
data_counts %>%
filter(Phase!="Start",
!is.na(Count)) %>%
ggplot(aes(x=Phase, fill=Count)) +stat_count(geom="bar",position="stack") + scale_fill_manual(values=pass_fail_withdrawl_colors,name="Status") + scale_x_discrete(labels=c("Overall\nAnalysis","Step 1-\nBQ","Step 2-\nOnline","Step 3-\nApp","Step 4-\nVideo","Step 5-\nPhone","Step 6-\nInterview","Step 7-\nPrehire"))+ labs(x="Step",y="Number of Applicants/Candidates", title= "Overall Selection Process")
data_counts<-raw_data_fall%>%
select(Gender, Race, tot_min, S2:Overall)%>%
gather(Phase,Count,c(S2:Overall))
data_counts$Count[data_counts$Count==" Withdrawn"]<-"Withdrawn"
data_counts$Count<-factor(data_counts$Count)
levels(data_counts$Count)
data_counts$Count<-reorder_factor(data_counts$Count,c(2,3,4,1))
levels(data_counts$Count)
data_counts$Phase<-factor(data_counts$Phase)
levels(data_counts$Phase)
data_counts$Phase<-reorder_factor(data_counts$Phase,c(8,9,10,1:6))
levels(data_counts$Phase)
data_fall<-read.csv(file.path(dir,'steps_fall_ext_256331.csv'))
#add analysis group column (Gender, Race, TM)
n_steps<-10
data_fall$analysis_group<-factor(rep(c(rep("Gender",2),rep("Total Minority",2),rep("Race",4)),n_steps))
head(data_fall)
names(data_fall)[4:5]
#create version of results table plotting pass/fail status
long_data<-data_fall %>%
select(analysis_group,Class,Pass:Fail,step) %>%
reshape(varying=3:4,v.names="Sample",times=names(data_fall)[4:5],timevar="Status",idvar=c("analysis_group","Class","step"),direction="long")
#order factors appropriately
long_data$Status<-reorder_factor(long_data$Status,c(2,1))
long_data$Class<-reorder_factor(long_data$Class,c(5,3,7,4,6,2,1))
data_counts %>%
filter(Phase!="Start",
!is.na(Count)) %>%
ggplot(aes(x=Phase, fill=Count)) +stat_count(geom="bar",position="stack") + scale_fill_manual(values=pass_fail_withdrawl_colors,name="Status") + scale_x_discrete(labels=c("Overall\nAnalysis","Step 1-\nBQ","Step 2-\nOnline","Step 3-\nApp","Step 4-\nVideo","Step 5-\nPhone","Step 6-\nInterview","Step 7-\nPrehire"))+ labs(x="Step",y="Number of Applicants/Candidates", title= "Overall Selection Process")
data_counts %>%
filter(Phase!="Start",
!is.na(Count)) %>%
ggplot(aes(x=Phase, fill=Count)) +stat_count(geom="bar",position="stack")
View(data_counts)
View(raw_data_fall)
data_counts<-raw_data_fall%>%
select(Gender, Race, tot_min, S2:Overall)%>%
gather(Phase,Count,c(S2:Overall))
#remove blanks
data_counts<-data_counts %>%
filter(Count!="")
#clean up count factor
data_counts$Count[data_counts$Count==" Withdrawn"]<-"Withdrawn"
data_counts$Count<-factor(data_counts$Count)
levels(data_counts$Count)
data_counts$Count<-reorder_factor(data_counts$Count,c(1,2,3))
#clean up phase factor
data_counts$Phase<-factor(data_counts$Phase)
data_counts$Phase<-reorder_factor(data_counts$Phase,c(8,9,10,1:6))
data_counts %>%
filter(Phase!="Start",
!is.na(Count)) %>%
ggplot(aes(x=Phase, fill=Count)) +stat_count(geom="bar",position="stack") + scale_fill_manual(values=pass_fail_withdrawl_colors,name="Status") + scale_x_discrete(labels=c("Overall\nAnalysis","Step 1-\nBQ","Step 2-\nOnline","Step 3-\nApp","Step 4-\nVideo","Step 5-\nPhone","Step 6-\nInterview","Step 7-\nPrehire"))+ labs(x="Step",y="Number of Applicants/Candidates", title= "Overall Selection Process")
data_counts %>%
filter(Phase!="Start",
!is.na(Count)) %>%
ggplot(aes(x=Phase, fill=Count)) +stat_count(geom="bar",position="stack") + scale_fill_manual(values=pass_fail_withdrawl_colors,name="Status") + scale_x_discrete(labels=c("Overall\nAnalysis","Step 1-\nS2","Step 2-\nS8","Step 3-\nSA","Step 4-\nA1","Step 5-\nA2","Step 6-\nA3","Step 7-\nA4","Step 8-\nA5","Step 9-\nA6"))+ labs(x="Step",y="Number of Applicants/Candidates", title= "Overall Selection Process")
levels(data_counts$Phase)
View(data_counts)
table(raw_data_fall$Overall)
View(data_counts)
table(data_counts$Phase)
data_counts<-raw_data_fall%>%
select(Gender, Race, tot_min, S2:Overall)%>%
gather(Phase,Count,c(S2:Overall))
table(data_counts$Phase)
#remove blanks
data_counts<-data_counts %>%
filter(Count!="")
table(data_counts$Phase)
#clean up count factor
data_counts$Count[data_counts$Count==" Withdrawn"]<-"Withdrawn"
data_counts$Count<-factor(data_counts$Count)
levels(data_counts$Count)
data_counts$Phase<-factor(data_counts$Phase)
levels(data_counts$Phase)
data_counts$Phase<-reorder_factor(data_counts$Phase,c(7,8,9,10,1:6))
levels(data_counts$Phase)
data_counts %>%
filter(Phase!="Start",
!is.na(Count)) %>%
ggplot(aes(x=Phase, fill=Count)) +stat_count(geom="bar",position="stack") + scale_fill_manual(values=pass_fail_withdrawl_colors,name="Status") + scale_x_discrete(labels=c("Overall\nAnalysis","Step 1-\nS2","Step 2-\nS8","Step 3-\nSA","Step 4-\nA1","Step 5-\nA2","Step 6-\nA3","Step 7-\nA4","Step 8-\nA5","Step 9-\nA6"))+ labs(x="Step",y="Number of Applicants/Candidates", title= "Overall Selection Process")
data_counts %>%
filter(Phase!="Start",
!Count %in% c("Withdrawn",NA)) %>%
filter(Gender %in% c("Male","Female"))%>%
ggplot(aes(x=Phase, fill=Gender)) +stat_count(geom="bar",position="stack") + scale_fill_manual(values=pass_fail_withdrawl_colors,name="Gender")+ scale_x_discrete(labels=c("Overall\nAnalysis","Step 1-\nS2","Step 2-\nS8","Step 3-\nSA","Step 4-\nA1","Step 5-\nA2","Step 6-\nA3","Step 7-\nA4","Step 8-\nA5","Step 9-\nA6"))+ labs(x="Step",y="Number of Applicants/Candidates", title= "Overall Selection Process Demographic Counts by Stage, Gender")
